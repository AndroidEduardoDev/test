// Generated by Dagger (https://dagger.dev).
package com.eduardo.fonseca.infrestructure.di;

import com.eduardo.fonseca.model.model.RecipeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkModule_ProvideRecipeRepositoryFactory implements Factory<RecipeRepository> {
  @Override
  public RecipeRepository get() {
    return provideRecipeRepository();
  }

  public static NetworkModule_ProvideRecipeRepositoryFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static RecipeRepository provideRecipeRepository() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideRecipeRepository());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvideRecipeRepositoryFactory INSTANCE = new NetworkModule_ProvideRecipeRepositoryFactory();
  }
}
