// Generated by view binder compiler. Do not edit!
package com.eduardo.fonseca.testyape.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.eduardo.fonseca.testyape.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRecipeFilterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnApplyFilters;

  @NonNull
  public final CheckBox checkAll;

  @NonNull
  public final AppCompatTextView count;

  @NonNull
  public final AppCompatImageView iconFilter;

  @NonNull
  public final LinearLayout ingredientsList;

  @NonNull
  public final ConstraintLayout scroll;

  @NonNull
  public final SearchView searchRecipes;

  private FragmentRecipeFilterBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnApplyFilters, @NonNull CheckBox checkAll, @NonNull AppCompatTextView count,
      @NonNull AppCompatImageView iconFilter, @NonNull LinearLayout ingredientsList,
      @NonNull ConstraintLayout scroll, @NonNull SearchView searchRecipes) {
    this.rootView = rootView;
    this.btnApplyFilters = btnApplyFilters;
    this.checkAll = checkAll;
    this.count = count;
    this.iconFilter = iconFilter;
    this.ingredientsList = ingredientsList;
    this.scroll = scroll;
    this.searchRecipes = searchRecipes;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRecipeFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRecipeFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_recipe_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRecipeFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApplyFilters;
      Button btnApplyFilters = ViewBindings.findChildViewById(rootView, id);
      if (btnApplyFilters == null) {
        break missingId;
      }

      id = R.id.checkAll;
      CheckBox checkAll = ViewBindings.findChildViewById(rootView, id);
      if (checkAll == null) {
        break missingId;
      }

      id = R.id.count;
      AppCompatTextView count = ViewBindings.findChildViewById(rootView, id);
      if (count == null) {
        break missingId;
      }

      id = R.id.iconFilter;
      AppCompatImageView iconFilter = ViewBindings.findChildViewById(rootView, id);
      if (iconFilter == null) {
        break missingId;
      }

      id = R.id.ingredientsList;
      LinearLayout ingredientsList = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsList == null) {
        break missingId;
      }

      id = R.id.scroll;
      ConstraintLayout scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.searchRecipes;
      SearchView searchRecipes = ViewBindings.findChildViewById(rootView, id);
      if (searchRecipes == null) {
        break missingId;
      }

      return new FragmentRecipeFilterBinding((ConstraintLayout) rootView, btnApplyFilters, checkAll,
          count, iconFilter, ingredientsList, scroll, searchRecipes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
